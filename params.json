{"name":"HPPC-RT","tagline":"Fork of HPPC, originally from Carrot Search","body":"##HPPC-RT: High Performance Primitive Collections \"RealTime\"\r\n\r\nThis is a fork of HPPC from CarrotSearch, see JavaDoc and documentation at: https://github.com/carrotsearch/hppc/wiki for more info.\r\n\r\nIMPORTANT: Developers - read INSTALL.txt file for proper Eclipse setup and requirements.\r\n\r\n---------------------------------------\r\n\r\nThis fork intend to follow the original HPPC as close as possible while \r\nadding, tweaking, and even modifiying some features, for the goal of improving HPPC realtime behaviour. \r\nMost of the internal modifications were done to effectively remove any temporary Objects creation at runtime, provided \r\nthe containers are correctly pre-sized initially. \r\n\r\n###List of changes:\r\n* Tweaked internal implementation to remove any allocation of temporary Objects at runtime.\r\n\r\n* Ability to pre-allocate any container with a strong guarantee to neither reallocate, nor generating garbage as long as the container \r\nhave less than capacity() elements.\r\n\r\n* Pooled, recyclable iterators: ability to use iterators the usual way, without creating iterator instances\r\ndynamically at runtime. \r\nThat means in particular using the enhanced for loop without any dynamic allocation underneath.\r\n\r\n* Primitive and Objects in-place array sorts, similar to java.util.Arrays with Comparable and Comparator versions.\r\n\r\n* [Object|primitives]Arrays as a complement of java.util.Arrays for in-place buffer manipulation : reverse, rotate...etc. \r\n\r\n* Native and optimized in-place sort methods for ArrayLists, LinkedLists, and ArrayDeques.\r\n\r\n* Heaps : Priority queues, and Indexed (a.k.a indirect) priority queues.\r\n\r\n* Double linked-lists, supporting all operations common to lists and dequeues, with rich bi-derectional iterating methods.\r\n\r\n* Custom default values for methods returning default values in some circumstances. (see Javadoc)\r\n\r\n...and some general performance and API tweaks.\r\n\r\nAll these new features are heavily Unit tested, so should work well.\r\n\r\nBinaries are provided in 2 flavors : one compatible with Java 1.5, the other with Java 1.6 and beyond.\r\nBoth binaries have no external dependencies, and offer the same API.\r\n\r\nStable version is available on Maven:\r\n````\r\n<dependency>\r\n    <groupId>com.github.vsonnier</groupId>\r\n    <artifactId>hppcrt</artifactId>\r\n    <version>0.7.2</version>\r\n</dependency>\r\n````\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}